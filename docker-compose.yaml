version: '3'
x-airflow-common:
  &airflow-common
  image: apache/airflow:latest
  environment:
    - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://postgres:postgres@postgres:5432/airflow
    - AIRFLOW__CORE__FERNET_KEY=FB0o_zt4e3Ziq3LdUUO7F2Z95cvFFx16hU8jTeR1ASM=
    - AIRFLOW__CORE__LOAD_EXAMPLES=False
    - AIRFLOW__CORE__LOGGING_LEVEL=INFO
    - _PIP_ADDITIONAL_REQUIREMENTS=${_PIP_ADDITIONAL_REQUIREMENTS:-pytest}
    
  volumes:
    - ${AIRFLOW_HOME:-.}/dags:/opt/airflow/dags
    - ${AIRFLOW_HOME:-.}/airflow-data/logs:/opt/airflow/logs
    - ${AIRFLOW_HOME:-.}/airflow-data/plugins:/opt/airflow/plugins
    - ${AIRFLOW_HOME:-.}/airflow-data/airflow.cfg:/opt/airlfow/airflow.cfg
    - ${AIRFLOW_HOME:-.}/connections.json:/opt/airflow/connections.json
    - ${AIRFLOW_HOME:-.}/variables.json:/opt/airflow/variables.json
  restart: on-failure
  user: "${AIRFLOW_UID:-50000}:0"
      #user: root
  depends_on:
    - postgres

services:
  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=airflow
      - POSTGRES_PORT=5432
    ports:
      - "5432:5432"
    container_name: postgres

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=elafrit.achraf@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=postgres
    ports:
      - "80:80"
    container_name: pgadmin
  
  airflow-init:
    << : *airflow-common
    container_name: airflow_init
    entrypoint: /bin/bash
    command:
      - -c
      - ( airflow db init &&
        airflow users create
          --role Admin
          --username airflow
          --password airflow
          --email airflow@airflow.com
          --firstname airflow
          --lastname airflow &&
          airflow variables import -a overwrite /opt/airflow/variables.json &&
          airflow connections import --overwrite /opt/airflow/connections.json )
    restart: on-failure

  airflow-webserver:
    << : *airflow-common
    command: airflow webserver
    ports:
      - 8080:8080
    container_name: airflow_webserver
    restart: always

  airflow-scheduler:
    << : *airflow-common
    command: airflow scheduler
    container_name: airflow_scheduler
    restart: always
  
# volumes:
#   postgres-data:
